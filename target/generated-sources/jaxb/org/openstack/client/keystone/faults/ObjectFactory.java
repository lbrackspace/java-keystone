//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-833 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.12.06 at 12:22:04 PM CST 
//


package org.openstack.client.keystone.faults;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.openstack.client.keystone.faults package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Forbidden_QNAME = new QName("http://docs.rackspacecloud.com/auth/api/v1.1", "forbidden");
    private final static QName _Unauthorized_QNAME = new QName("http://docs.rackspacecloud.com/auth/api/v1.1", "unauthorized");
    private final static QName _BadRequest_QNAME = new QName("http://docs.rackspacecloud.com/auth/api/v1.1", "badRequest");
    private final static QName _ItemNotFound_QNAME = new QName("http://docs.rackspacecloud.com/auth/api/v1.1", "itemNotFound");
    private final static QName _TemporaryUnavailable_QNAME = new QName("http://docs.rackspacecloud.com/auth/api/v1.1", "temporaryUnavailable");
    private final static QName _AuthFault_QNAME = new QName("http://docs.rackspacecloud.com/auth/api/v1.1", "authFault");
    private final static QName _UserDisabled_QNAME = new QName("http://docs.rackspacecloud.com/auth/api/v1.1", "userDisabled");
    private final static QName _ServiceUnavailable_QNAME = new QName("http://docs.rackspacecloud.com/auth/api/v1.1", "serviceUnavailable");
    private final static QName _UsernameConflict_QNAME = new QName("http://docs.rackspacecloud.com/auth/api/v1.1", "usernameConflict");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.openstack.client.keystone.faults
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link BadRequestFault }
     * 
     */
    public BadRequestFault createBadRequestFault() {
        return new BadRequestFault();
    }

    /**
     * Create an instance of {@link ForbiddenFault }
     * 
     */
    public ForbiddenFault createForbiddenFault() {
        return new ForbiddenFault();
    }

    /**
     * Create an instance of {@link AuthFault }
     * 
     */
    public AuthFault createAuthFault() {
        return new AuthFault();
    }

    /**
     * Create an instance of {@link UserDisabledFault }
     * 
     */
    public UserDisabledFault createUserDisabledFault() {
        return new UserDisabledFault();
    }

    /**
     * Create an instance of {@link ItemNotFoundFault }
     * 
     */
    public ItemNotFoundFault createItemNotFoundFault() {
        return new ItemNotFoundFault();
    }

    /**
     * Create an instance of {@link ServiceUnavailableFault }
     * 
     */
    public ServiceUnavailableFault createServiceUnavailableFault() {
        return new ServiceUnavailableFault();
    }

    /**
     * Create an instance of {@link UnauthorizedFault }
     * 
     */
    public UnauthorizedFault createUnauthorizedFault() {
        return new UnauthorizedFault();
    }

    /**
     * Create an instance of {@link UsernameConflictFault }
     * 
     */
    public UsernameConflictFault createUsernameConflictFault() {
        return new UsernameConflictFault();
    }

    /**
     * Create an instance of {@link TemporaryUnavailableFault }
     * 
     */
    public TemporaryUnavailableFault createTemporaryUnavailableFault() {
        return new TemporaryUnavailableFault();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ForbiddenFault }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://docs.rackspacecloud.com/auth/api/v1.1", name = "forbidden")
    public JAXBElement<ForbiddenFault> createForbidden(ForbiddenFault value) {
        return new JAXBElement<ForbiddenFault>(_Forbidden_QNAME, ForbiddenFault.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link UnauthorizedFault }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://docs.rackspacecloud.com/auth/api/v1.1", name = "unauthorized")
    public JAXBElement<UnauthorizedFault> createUnauthorized(UnauthorizedFault value) {
        return new JAXBElement<UnauthorizedFault>(_Unauthorized_QNAME, UnauthorizedFault.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BadRequestFault }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://docs.rackspacecloud.com/auth/api/v1.1", name = "badRequest")
    public JAXBElement<BadRequestFault> createBadRequest(BadRequestFault value) {
        return new JAXBElement<BadRequestFault>(_BadRequest_QNAME, BadRequestFault.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ItemNotFoundFault }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://docs.rackspacecloud.com/auth/api/v1.1", name = "itemNotFound")
    public JAXBElement<ItemNotFoundFault> createItemNotFound(ItemNotFoundFault value) {
        return new JAXBElement<ItemNotFoundFault>(_ItemNotFound_QNAME, ItemNotFoundFault.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TemporaryUnavailableFault }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://docs.rackspacecloud.com/auth/api/v1.1", name = "temporaryUnavailable")
    public JAXBElement<TemporaryUnavailableFault> createTemporaryUnavailable(TemporaryUnavailableFault value) {
        return new JAXBElement<TemporaryUnavailableFault>(_TemporaryUnavailable_QNAME, TemporaryUnavailableFault.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link AuthFault }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://docs.rackspacecloud.com/auth/api/v1.1", name = "authFault")
    public JAXBElement<AuthFault> createAuthFault(AuthFault value) {
        return new JAXBElement<AuthFault>(_AuthFault_QNAME, AuthFault.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link UserDisabledFault }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://docs.rackspacecloud.com/auth/api/v1.1", name = "userDisabled")
    public JAXBElement<UserDisabledFault> createUserDisabled(UserDisabledFault value) {
        return new JAXBElement<UserDisabledFault>(_UserDisabled_QNAME, UserDisabledFault.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ServiceUnavailableFault }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://docs.rackspacecloud.com/auth/api/v1.1", name = "serviceUnavailable")
    public JAXBElement<ServiceUnavailableFault> createServiceUnavailable(ServiceUnavailableFault value) {
        return new JAXBElement<ServiceUnavailableFault>(_ServiceUnavailable_QNAME, ServiceUnavailableFault.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link UsernameConflictFault }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://docs.rackspacecloud.com/auth/api/v1.1", name = "usernameConflict")
    public JAXBElement<UsernameConflictFault> createUsernameConflict(UsernameConflictFault value) {
        return new JAXBElement<UsernameConflictFault>(_UsernameConflict_QNAME, UsernameConflictFault.class, null, value);
    }

}
